{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./src/models/skills/IStateBlow.tsx","webpack:///./src/components/util/ResponsiveCardList.vue?ecf7","webpack:///./src/components/util/ResponsiveCardList.vue?1182","webpack:///./src/components/util/ResponsiveCardList.vue?fdec","webpack:///./src/components/util/ResponsiveCardList.vue","webpack:///./node_modules/core-js/modules/es.array.flat-map.js","webpack:///./src/api/TableProvider.ts","webpack:///./node_modules/core-js/modules/es.array.unscopables.flat-map.js","webpack:///./node_modules/core-js/internals/flatten-into-array.js","webpack:///./src/components/util/ResponsiveCardListEntry.vue?4f4c","webpack:///./src/components/util/ResponsiveCardListEntry.vue?1dd9","webpack:///./src/components/util/ResponsiveCardListEntry.vue?fbcb","webpack:///./src/components/util/ResponsiveCardListEntry.vue","webpack:///./src/components/util/ResponsiveCardList.vue?02b9","webpack:///./src/components/util/ResponsiveCardListEntry.vue?42cb"],"names":["_arrayWithoutHoles","arr","Array","isArray","arrayLikeToArray","_iterableToArray","iter","Symbol","iterator","Object","from","_nonIterableSpread","TypeError","_toConsumableArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","_arrayWithHoles","_iterableToArrayLimit","i","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","_nonIterableRest","_slicedToArray","arrayWithHoles","iterableToArrayLimit","nonIterableRest","renderChild","h","stateEffectId","stateEffectParameters","duration","effect","seidProcessor","Blows","res","describeTsx","index","describe","name","effectApplyType","statIncreasePercent","statName","mod","split","amount","Number","appliesTo","isNaN","incr","applySplit","promises","map","v","filter","SkillProvider","getSkill","apply","Promise","all","skills","message","join","text","percent","appendDuration","statIncrease","getBlow","id","1","thousands","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","28","29","30","31","32","33","34","35","36","37","38","39","41","rate","42","chance","damagePercent","damage","damageStr","43","44","45","55","hpPercent","range","57","58","59","60","61","param","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","82","83","84","86","e","87","88","89","90","93","94","96","ratio","99","100","stateEffectName","111","112","113","114","115","116","117","118","121","123","124","125","126","127","128","129","130","131","132","133","134","135","137","138","139","141","144","slows","prefix","mods","151","159","thresholdHpPercent","bonusDamagePerPercentHpUnderThreshold","154","idCount","skillIds","slice","onHitType","vv","s","indexOf","freeSkillNames","sendResist","av","desc","url","skillNames","166","effectId","bonus","blow","blowName","167","169","171","params","split2","type","freeSkills","173","startsWith","param1","substring","scaling","179","list","200","202","211","values","215","skill","skillName","218","action","canAD","224","225","mode","232","monsterId","initialAction","monsterName","233","234","241","251","252","254","opt1","opt2","opt3","stateEffectDesc","275","allowedSkillNames","allowedSkillNamesList","278","hpThresholdRatio","damageBoost","288","291","296","flatMap","replace","settings","effects","milliseconds","childEffect","info","297","301","durability","skillIdIfBroken","unkA","unkB","unkC","typeStr","306","307","309","310","315","interval","316","317","322","skillId","cooldown","skillLink","323","325","coeff","331","332","333","345","pairs","a","349","bubbleId","bubbleName","TableProvider","getTableRow","uiresolve","bubble","_BubbleNameID_txt","350","356","recoveredSkills","recoverySkills","recoveryAmount","recoveredSkillNames","recoverySkillNames","370","count","372","statToName","sourceStat","destStat","sourceStatName","destStatName","389","390","392","404","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","isLong","_t","_m","staticRenderFns","_v","extend","props","computed","component","$","flattenIntoArray","toObject","toLength","aFunction","arraySpeciesCreate","target","proto","callbackfn","A","O","sourceLen","arguments","tableName","region","_ensureRegion","get","resp","data","rowId","opt","rowIds","fileresolve","select","limit","columnName","op","state","regionCode","addToUnscopables","bind","original","source","start","depth","mapper","thisArg","element","targetIndex","sourceIndex","mapFn","module","exports","narrow","Boolean"],"mappings":"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","file":"js/monsters~skills.61c06517.js","sourcesContent":["import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import ISkillEffect from './ISkillEffect';\r\nimport ISkillEffectValue from './ISkillEffectValue';\r\nimport ITypedMap from '../util/ITypedMap';\r\nimport { filters } from '@/filters/Filters';\r\nimport SkillProvider from '@/api/SkillProvider';\r\nimport { CreateElement, VNode } from 'vue';\r\nimport TableProvider from '@/api/TableProvider';\r\nimport ITableRow from '../table/ITableRow';\r\n\r\nexport default interface IStateBlow {\r\n    name: string;\r\n    describe?(effect: ISkillEffect, value?: ISkillEffectValue): string|IDescription|Promise<IDescription|null>|null;\r\n    describeTsx?(h: CreateElement, effect: ISkillEffect, value?: ISkillEffectValue): Promise<VNode|null>;\r\n}\r\n\r\nexport interface IDescription {\r\n    text: string;\r\n    appendDuration?: boolean;\r\n}\r\n\r\nasync function renderChild(h: CreateElement, stateEffectId: number, stateEffectParameters: string, duration: number, effect: ISkillEffect) {\r\n    const seidProcessor = Blows[stateEffectId];\r\n    if (seidProcessor) {\r\n        let res = null;\r\n        if (seidProcessor.describeTsx) {\r\n            res = await seidProcessor.describeTsx(h, effect, {\r\n                value: stateEffectParameters,\r\n                duration: duration,\r\n                index: -1,\r\n            });\r\n        } else if (seidProcessor.describe) {\r\n            res = await seidProcessor.describe(effect, {\r\n                value: stateEffectParameters,\r\n                duration: duration,\r\n                index: -1,\r\n            });\r\n        }\r\n        \r\n        if (res) {\r\n            return (\r\n                <div class=\"child-effect\">\r\n                    <div class=\"effect-id\">\r\n                        { stateEffectId }\r\n                    </div>\r\n                    <div class=\"effect-name\">\r\n                        { seidProcessor.name }\r\n                    </div>\r\n                    <div class=\"description\">\r\n                        { res } <span class=\"raw\">{ stateEffectParameters } apply to { effect.effectApplyType }</span>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nfunction statIncreasePercent(statName: string, mod: number = 0): IStateBlow {\r\n    return {\r\n        name: `${statName} 调整`,\r\n        async describe(effect, value): Promise<IDescription|null> {\r\n            if (value) {\r\n                const split = value.value.split(\";\");\r\n                let amount = Number(split[0]);\r\n                let appliesTo = split.length > 0 ? split[1] : null;\r\n                if (!isNaN(amount)) {\r\n                    amount += mod;\r\n                    let incr = \"增加\";\r\n                    if (amount < 0) {\r\n                        incr = \"减少\";\r\n                        amount *= -1;\r\n                    }\r\n\r\n                    if (appliesTo) {\r\n                        const applySplit = appliesTo.split(\",\");\r\n                        const promises = (applySplit.map((v) => Number(v))\r\n                            .filter((v) => !isNaN(v) && v > 1)\r\n                            .map(async (v) => await SkillProvider.getSkill(v)));\r\n                        const skills = await Promise.all(promises);\r\n                        if (skills.length > 0) {\r\n                            appliesTo = \"在技能期间 \" + skills\r\n                                .map((v) => v.name.message)\r\n                                .join(\", \");\r\n                        } else {\r\n                            appliesTo = null;\r\n                        }\r\n                    }\r\n\r\n                    return {\r\n                        text: `${statName} ${appliesTo ? appliesTo : \"\"} ${incr}  ${filters.percent(amount)}%`,\r\n                        appendDuration: true,\r\n                    };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        },\r\n    };\r\n}\r\n\r\nfunction statIncrease(statName: string, mod: number = 0): IStateBlow {\r\n    return {\r\n        name: `${statName} 调整`,\r\n        async describe(effect, value): Promise<IDescription|null> {\r\n            if (value) {\r\n                const split = value.value.split(\";\");\r\n                let amount = Number(split[0]);\r\n                let appliesTo = split[1] || null;\r\n                if (!isNaN(amount)) {\r\n                    amount += mod;\r\n                    let incr = \"增加\";\r\n                    if (amount < 0) {\r\n                        incr = \"减少\";\r\n                        amount *= -1;\r\n                    }\r\n\r\n                    if (appliesTo) {\r\n                        const applySplit = appliesTo.split(\",\");\r\n                        const promises = (applySplit.map((v) => Number(v))\r\n                            .filter((v) => !isNaN(v) && v > 1)\r\n                            .map(async (v) => await SkillProvider.getSkill(v)));\r\n                        const skills = await Promise.all(promises);\r\n                        if (skills.length > 0) {\r\n                            appliesTo = \"在技能期间 \" + skills\r\n                                .map((v) => v.name.message)\r\n                                .join(\", \");\r\n                        } else {\r\n                            appliesTo = null;\r\n                        }\r\n                    }\r\n\r\n                    return {\r\n                        text: `${statName} ${appliesTo ? appliesTo : \"\"} ${incr}  ${amount}`,\r\n                        appendDuration: true,\r\n                    };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        },\r\n    };\r\n}\r\n\r\nfunction getBlow(id: number): IStateBlow|null {\r\n    return Blows[id] || null;\r\n}\r\n\r\nexport const Blows: ITypedMap<IStateBlow> = {\r\n    1: {\r\n        name: \"技能物理攻击力\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                let amount = Number(value.value);\r\n                if (!isNaN(amount)) {\r\n                    return {\r\n                        text: `技能增加 ${filters.thousands(amount)} 物理攻击力 `,\r\n                        appendDuration: true,\r\n                    };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n    2: {\r\n        name: \"技能物理攻击倍率\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                let amount = Number(value.value);\r\n                if (!isNaN(amount)) {\r\n                    amount += 1;\r\n                    return {\r\n                        text: `技能物理攻击倍率变为 ${filters.percent(amount, 1)}%`,\r\n                        appendDuration: true,\r\n                    };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n    3: statIncrease(\"物理防御力\"),\r\n    4: statIncreasePercent(\"物理防御力\"),\r\n    5: statIncrease(\"力量\"),\r\n    6: statIncrease(\"敏捷\"),\r\n    7: statIncrease(\"智力\"),\r\n    8: statIncrease(\"体质\"),\r\n    9: statIncrease(\"HP\"),\r\n    10: statIncrease(\"MP\"),\r\n    11: {\r\n        name: \"HP 时间内\",\r\n    },\r\n    12: {\r\n        name: \"HP% 在时间内\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                let amount = Number(value.value);\r\n                if (!isNaN(amount)) {\r\n                    return {\r\n                        text: `在时间内 ${amount < 0 ? \"耗竭\" : \"恢复\"} ${filters.percent((amount < 0 ? -1 : 1) * amount, 1)}% HP `,\r\n                        appendDuration: true,\r\n                    };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n    13: {\r\n        name: \"MP 时间内\",\r\n    },\r\n    14: {\r\n        name: \"MP% 在时间内\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                let amount = Number(value.value);\r\n                if (!isNaN(amount)) {\r\n                    return {\r\n                        text: `在时间内 ${amount < 0 ? \"耗竭\" : \"恢复\"} ${filters.percent((amount < 0 ? -1 : 1) * amount, 1)}% MP`,\r\n                        appendDuration: true,\r\n                    };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n    15: {\r\n        name: \"HP 调整\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                const v = value.value.split(\";\");\r\n                let amount = Number(v[0]);\r\n                if (!isNaN(amount)) {\r\n                    return {\r\n                        text: `${amount < 0 ? \"减少\" : \"恢复\"} ${filters.thousands((amount < 0 ? -1 : 1) * amount)} HP`,\r\n                        appendDuration: true,\r\n                    };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n    16: {\r\n        name: \"HP% 调整\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                const v = value.value.split(\";\");\r\n                let amount = Number(v[0]);\r\n                if (!isNaN(amount)) {\r\n                    return {\r\n                        text: `${amount < 0 ? \"减少\" : \"恢复\"} ${filters.percent((amount < 0 ? -1 : 1) * amount, 1)}% HP`,\r\n                        appendDuration: true,\r\n                    };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n    17: {\r\n        name: \"MP 调整\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                const v = value.value.split(\";\");\r\n                let amount = Number(v[0]);\r\n                if (!isNaN(amount)) {\r\n                    return {\r\n                        text: `${amount < 0 ? \"减少\" : \"恢复\"} ${filters.thousands((amount < 0 ? -1 : 1) * amount)} MP`,\r\n                        appendDuration: true,\r\n                    };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n    18: {\r\n        name: \"MP% 调整\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                const v = value.value.split(\";\");\r\n                let amount = Number(v[0]);\r\n                if (!isNaN(amount)) {\r\n                    return {\r\n                        text: `${amount < 0 ? \"减少\" : \"恢复\"} ${filters.percent((amount < 0 ? -1 : 1) * amount, 1)}% MP`,\r\n                        appendDuration: true,\r\n                    };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n    19: statIncrease(\"硬直\"),\r\n    20: statIncrease(\"硬直抵抗\"),\r\n    21: statIncrease(\"致命\"),\r\n    22: statIncrease(\"致命抵抗\"),\r\n    23: statIncrease(\"眩晕\"),\r\n    24: statIncrease(\"眩晕抵抗\"),\r\n    25: statIncreasePercent(\"动作速度\"),\r\n    26: statIncrease(\"下行延迟\"),\r\n\r\n    28: {\r\n        name: \"技能魔法攻击力\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                let amount = Number(value.value);\r\n                if (!isNaN(amount)) {\r\n                    return {\r\n                        text: `技能增加 ${filters.thousands(amount)} 魔法攻击力`,\r\n                        appendDuration: true,\r\n                    };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n    29: {\r\n        name: \"技能魔法攻击倍率\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                let amount = Number(value.value);\r\n                if (!isNaN(amount)) {\r\n                    amount += 1;\r\n                    return {\r\n                        text: `技能魔法攻击倍率变为 ${filters.percent(amount, 1)}%`,\r\n                        appendDuration: true,\r\n                    };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n    }, \r\n    30: statIncreasePercent(\"盾挡时机\"),\r\n    31: statIncreasePercent(\"回避时机\"),\r\n    32: statIncreasePercent(\"火属性攻击\"),\r\n    33: statIncreasePercent(\"水属性攻击\"),\r\n    34: statIncreasePercent(\"光属性攻击\"),\r\n    35: statIncreasePercent(\"暗属性攻击\"),\r\n    36: statIncreasePercent(\"火防御\"),\r\n    37: statIncreasePercent(\"水防御\"),\r\n    38: statIncreasePercent(\"光防御\"),\r\n    39: statIncreasePercent(\"暗防御\"),\r\n\r\n    41: {\r\n        name: \"叠冰\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                const split = value.value.split(\";\");\r\n                const rate = Number(split[0]);\r\n\r\n                return {\r\n                    text: `${filters.percent(rate)}% 几率结冰`,\r\n                    appendDuration: true,\r\n                };\r\n            }\r\n\r\n            return null;\r\n        },\r\n    },\r\n    42: {\r\n        name: \"灼烧\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                let v = value.value;\r\n                let split = v.split(\";\");\r\n                let chance = Number(split[0]) * 100;\r\n                let damagePercent = Number(split[1]);\r\n                let damage = Number(split[2]);\r\n\r\n                const damageStr = (isNaN(damagePercent) || damagePercent == 0) ? filters.thousands(damage) : `${filters.percent(damagePercent)}%`;\r\n\r\n                return {\r\n                    text: `${chance}% 几率使目标每两秒遭受  ${damageStr} 火属性伤害`,\r\n                    appendDuration: true,\r\n                };\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n    43: {\r\n        name: \"触电\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                let v = value.value;\r\n                let split = v.split(\";\");\r\n                let chance = Number(split[0]) * 100;\r\n                let damage = split[1] && Number(split[1]);\r\n\r\n                const damageStr = damage ? `光抗 ${damage < 0 ? '减少' : '增加'} 了 ${damage * 100}%` : '';\r\n\r\n                return {\r\n                    text: `${chance}% 几率触电 ${damageStr ? ', ' + damageStr : ''}`,\r\n                    appendDuration: true,\r\n                };\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n    44: {\r\n        name: \"暗系灼烧\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                let v = value.value;\r\n                let split = v.split(\";\");\r\n                let chance = Number(split[0]) * 100;\r\n                let damagePercent = Number(split[1]);\r\n                let damage = Number(split[2]);\r\n\r\n                const damageStr = (isNaN(damagePercent) || damagePercent == 0) ? filters.thousands(damage) : `${filters.percent(damagePercent)}%`;\r\n\r\n                return {\r\n                    text: `${chance}% 几率使目标每两秒遭受 ${damageStr} 暗属性伤害`,\r\n                    appendDuration: true,\r\n                };\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n    45: {\r\n        name: \"睡眠\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                let v = value.value;\r\n                let chance = Number(v) * 100;\r\n\r\n                return {\r\n                    text: `${chance}% 几率陷入睡眠`,\r\n                    appendDuration: true,\r\n                };\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n\r\n    55: {\r\n        name: \"生命保护膜\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                const v = value.value;\r\n                const split = v.split(\";\");\r\n                const hpPercent = Number(split[0]);\r\n                const range = Number(split[1]);\r\n                const unk1 = split[2];\r\n                const unk2 = split[3];\r\n                const unk3 = split[4];\r\n\r\n                if (!isNaN(hpPercent) && !isNaN(range)) {\r\n                    return {\r\n                        text: `以${range / 1000} 米半径内形成最大HP的 ${hpPercent}% 的生命保护膜`,\r\n                        appendDuration: true,\r\n                    };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        },\r\n    },\r\n\r\n    57: {\r\n        name: \"复活\",\r\n    },\r\n\r\n    58: statIncreasePercent(\"最大HP\"),\r\n    59: statIncreasePercent(\"最大MP\"),\r\n    60: {\r\n        name: \"连锁闪电效果\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                const split = value.value.split(';');\r\n                if (split.length === 3) {\r\n                    return `${filters.percent(split[2])}% 几率使 ${split[0]} 范围内的敌人传递 ${split[1]} 次连锁闪电`;\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n    61: {\r\n        name: \"增加超级盔甲（霸体）\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                let param = Number(value.value);\r\n                if (!isNaN(param)) {\r\n                    return {\r\n                        text: `超级盔甲增加了 ${filters.thousands(param)}`,\r\n                        appendDuration: true,\r\n                    };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n    62: {\r\n        name: \"应用分层的动作\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                return {\r\n                    text: `应用分层的动作效果 ${value.value}`,\r\n                    appendDuration: true,\r\n                }\r\n            }\r\n\r\n            return null;\r\n        },\r\n    },\r\n    63: {\r\n        name: \"石像化\",\r\n    },\r\n    64: statIncreasePercent(\"超级盔甲（霸体）\"),\r\n    65: statIncrease(\"射程\"),\r\n    66: {\r\n        name: \"命中威胁\"\r\n    },\r\n    67: {\r\n        name: \"限制技能\"\r\n    },\r\n    68: {\r\n        name: \"MP 返还\"\r\n    },\r\n    69: {\r\n        name: \"净化\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                return {\r\n                    text: `净化 ${value.value} 有害效果`,\r\n                    appendDuration: true,\r\n                };\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n    70: {\r\n        name: \"无法移动\",\r\n    },\r\n    71: {\r\n        name: \"无法行动\",\r\n    },\r\n    72: {\r\n        name: \"冷却\",\r\n    },\r\n    73: {\r\n        name: \"透明化\",\r\n    },\r\n    74: {\r\n        name: \"最大攻击\",\r\n    },\r\n    75: statIncrease(\"移动速度\"),\r\n    76: statIncreasePercent(\"移动速度\"),\r\n    77: {\r\n        name: \"效果免疫\",\r\n    },\r\n    78: {\r\n        name: \"沉默\",\r\n        describe(effect, value) {\r\n            return {\r\n                text: \"无法使用技能\",\r\n                appendDuration: true,\r\n            };\r\n        },\r\n    },\r\n    82: {\r\n        name: \"[废弃] 最终伤害百分比\",\r\n    },\r\n    83: {\r\n        name: \"清除buff\",\r\n        describe(effect, value) {\r\n            return null;\r\n        }\r\n    },\r\n    84: {\r\n        name: \"强制行动\",\r\n    },\r\n    86: {\r\n        name: \"背叛队伍\",\r\n        describe: (e, v) => ({\r\n            text: \"爱情病毒\",\r\n            appendDuration: true,\r\n        }),\r\n    },\r\n    87: statIncreasePercent(\"力量\"),\r\n    88: statIncreasePercent(\"敏捷\"),\r\n    89: statIncreasePercent(\"智力\"),\r\n    90: statIncreasePercent(\"体质\"),\r\n\r\n    93: statIncrease(\"魔法防御力\"),\r\n    94: statIncreasePercent(\"魔法防御力\"),\r\n    96: {\r\n        name: \"技能冷却\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                let v = value.value;\r\n                let split = v.split(\";\");\r\n                let ratio = Number(split[0]);\r\n                if (!isNaN(ratio)) {\r\n                    ratio -= 1;\r\n\r\n                    return {\r\n                        text: ratio < 0 ? `技能冷却时间减少到 ${filters.percent(-ratio)}%` : `技能冷却时间增加到 ${filters.percent(ratio)}%`,\r\n                        appendDuration: true,\r\n                    };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n\r\n    99: {\r\n        name: \"无敌\",\r\n        describe(effect: ISkillEffect, value?: ISkillEffectValue) {\r\n            if (value && value.duration == 0) {\r\n                return null;\r\n            }\r\n\r\n            return {\r\n                text: \"无敌\",\r\n                appendDuration: true,\r\n            };\r\n        },\r\n    },\r\n\r\n    100: {\r\n        name: \"应用图形化特效\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                let stateEffectId = Number(value.value);\r\n\r\n                // TODO\r\n                let stateEffectName = `状态 ${stateEffectId}`;\r\n\r\n                return {\r\n                    text: `以 ${stateEffectName} 应用视觉效果`,\r\n                    appendDuration: true,\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n    \r\n    111: {\r\n        name: \"反弹物理伤害\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                const percent = Number(value.value);\r\n                if (!isNaN(percent)) {\r\n                    return `反弹 ${filters.percent(percent)}% 物理伤害`;\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n    112: {\r\n        name: \"向施展者反弹物理伤害\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                const percent = Number(value.value);\r\n                if (!isNaN(percent)) {\r\n                    return `往施展者反弹 ${filters.percent(percent)}% 物理伤害`;\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n    113: {\r\n        name: \"反弹魔法伤害\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                const percent = Number(value.value);\r\n                if (!isNaN(percent)) {\r\n                    return `往施展者反弹 ${filters.percent(percent)}% 魔法伤害`;\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n    114: {\r\n        name: \"向施展者反弹魔法伤害\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                const percent = Number(value.value);\r\n                if (!isNaN(percent)) {\r\n                    return `反弹 ${filters.percent(percent)}% 魔法伤害`;\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n    115: {\r\n        name: \"毒爆\",\r\n    },\r\n    116: {\r\n        name: \"火爆\",\r\n    },\r\n    117: {\r\n        name: \"冰爆\",\r\n    },\r\n    118: {\r\n        name: \"雷爆\",\r\n    },\r\n\r\n    121: {\r\n        name: \"改变动作\",\r\n    },\r\n\r\n    123: statIncreasePercent(\"硬直\"),\r\n    124: statIncreasePercent(\"硬直抵抗\"),\r\n    125: statIncreasePercent(\"致命一击\"),\r\n    126: statIncreasePercent(\"致命一击抵抗\"),\r\n    127: statIncreasePercent(\"眩晕\"),\r\n    128: statIncreasePercent(\"眩晕抵抗\"),\r\n    129: { name: \"使用替代动作\", describe: () => ({\r\n            text: \"从技能驱动应用新的动作\",\r\n            appendDuration: true,\r\n        }),\r\n    },\r\n    130: {\r\n        name: \"后期阶段清除效果\",\r\n    },\r\n    131: {\r\n        name: \"改变重量\",\r\n    },\r\n    132: {\r\n        name: \"挑衅\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                let param = Number(value.value);\r\n                if (!isNaN(param)) {\r\n                    return {\r\n                        text: `施法者拥有挑衅优先等级 ${filters.thousands(param, undefined, true)}`,\r\n                        appendDuration: true,\r\n                    };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n    133: {\r\n        name: \"强制眩晕\",\r\n    },\r\n    134: statIncreasePercent(\"受到物理伤害\", -1),\r\n    135: statIncreasePercent(\"受到魔法伤害\", -1),\r\n\r\n    137: {\r\n        name: \"无视死亡\",\r\n    },\r\n    138: {\r\n        name: \"无视框条\",\r\n        describe(effect, value) {\r\n            return {\r\n                text: `除非由效果99触发，否则无视目标的任何框条状态`,\r\n            };\r\n        },\r\n    },\r\n    139: statIncreasePercent(\"MP 消耗\"),\r\n\r\n    141: {\r\n        name: \"生命恢复效果\",\r\n        describe(effect, value) {\r\n            if (value && value.duration > 0) {\r\n                let ratio = Number(value.value);\r\n                if (!isNaN(ratio)) {\r\n                    ratio -= 1;\r\n                    if (ratio > 0) {\r\n                        return {\r\n                            text: `生命恢复效果增加了 ${filters.percent(ratio)}%`,\r\n                            appendDuration: true,\r\n                        }\r\n                    } else if (ratio < 0) {\r\n                        return {\r\n                            text: `生命恢复效果减少了 ${filters.percent(-ratio)}%`,\r\n                            appendDuration: true,\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n\r\n    144: {\r\n        name: \"冻伤/动作速度减慢\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                let v = value.value;\r\n                let split = v.split(\";\");\r\n                let slows = [0, 0, 0];\r\n                for (let i = 0; i < split.length; ++i) {\r\n                    let param = Number(split[i]);\r\n                    if (!isNaN(param)) {\r\n                        slows[i] = param;\r\n                    }\r\n                }\r\n\r\n                let prefix = [\"移动\", \"动作\", \"冻伤\"];\r\n                let mods = slows.map((v, i) => (v == 0 ? null : `${prefix[i]} 速度 ${v < 0 ? '减少' : '增加'} 了 ${filters.percent((v < 0 ? -1 : 1) * v)}%`))\r\n                    .filter((v) => v != null);\r\n\r\n                return {\r\n                    text: \"目标 \" + mods.join(\"; \"),\r\n                    appendDuration: true,\r\n                };\r\n            }\r\n\r\n            return null;\r\n        },\r\n    },\r\n    151: {\r\n        name: \"镜头失真效果\",\r\n        // TODO\r\n    },\r\n\r\n    159: {\r\n        name: \"惩罚伤害\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                let v = value.value;\r\n                let split = v.split(\";\");\r\n                let thresholdHpPercent = Number(split[0]);\r\n                let bonusDamagePerPercentHpUnderThreshold = Number(split[1]);\r\n\r\n                return {\r\n                    text: `当击中的敌人血量低于 ${filters.percent(thresholdHpPercent)}% HP, 每少1% HP 将给予 ${filters.percent(bonusDamagePerPercentHpUnderThreshold)}% 额外伤害`,\r\n                };\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n\r\n    154: {\r\n        name: \"获得免疫力\",\r\n        async describe(effect, value) {\r\n            if (value) {\r\n                const split = value.value.split(\";\");\r\n                const idCount = split.length - 1;\r\n                if (idCount > 0) {\r\n                    const skillIds = split.slice(0, idCount)\r\n                        .map((v) => Number(v))\r\n                        .filter((v) => !isNaN(v) && v > 1);\r\n                    const onHitType = split[idCount];\r\n\r\n                    let freeSkillNames = (await Promise.all(skillIds\r\n                        .filter((v) => v > 0)\r\n                        .map(async (v) => await SkillProvider.getSkill(v))\r\n                        .map(async (v) => {\r\n                            const vv = await v;\r\n                            return vv.name.message + ` (${vv.id})`;\r\n                        })\r\n                        .filter((v, i, s) => s.indexOf(v) == i)));\r\n\r\n                    return {\r\n                        text: `使用 ${onHitType} 驱动获得免疫技能 ${freeSkillNames.join(\", \")}  `,\r\n                        appendDuration: true,\r\n                    };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        },\r\n        async describeTsx(h, effect, value) {\r\n            if (value) {\r\n                const split = value.value.split(';');\r\n                const skillIds = split.map(Number);\r\n                const sendResist = split[split.length - 1] == 'Resist';\r\n                \r\n                let skillNames = (await Promise.all(skillIds\r\n                    .filter((v) => v > 0 && !isNaN(v))\r\n                    .map(async (v) => await SkillProvider.getSkill(v))\r\n                    .map(async (v) => {\r\n                        const av = await v;\r\n                        return {\r\n                            desc: `${av.name.message} (${av.id})`,\r\n                            id: av.id,\r\n                        };\r\n                    })\r\n                    .map(async (v) => {\r\n                        const av = await v;\r\n                        const url = `/skills/${av.id}`;\r\n                        return (\r\n                            <li>\r\n                                <a href={url}>{av.desc}</a>\r\n                            </li>\r\n                        );\r\n                    })));\r\n            \r\n                return (\r\n                    <span>\r\n                        对以下技能获得免疫力\r\n                        <ul class=\"inline-list\">{ skillNames }</ul>\r\n                        { sendResist ? ', 抵抗时显示抵抗信息' : undefined }\r\n                    </span>\r\n                );\r\n            }\r\n            \r\n            return null;\r\n        },\r\n    },\r\n\r\n    166: {\r\n        name: \"对受损目标伤害增加\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                let v = value.value;\r\n                let split = v.split(\";\");\r\n                if (split.length >= 2) {\r\n                    let effectId = Number(split[0]);\r\n                    let bonus = Number(split[1]);\r\n\r\n                    let blow = getBlow(effectId);\r\n                    let blowName = blow ? blow.name : `Effect ${effectId}`;\r\n\r\n                    return {\r\n                        text: `对 ${blowName} 的目标进行攻击，将会追加 ${filters.percent((bonus < 0 ? -1 : 1) * bonus)}% ${bonus < 0 ? \"减少\" : \"额外\"} 伤害`,\r\n                        appendDuration: true,\r\n                    };\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    },\r\n\r\n    167: {\r\n        name: \"召唤技能等级\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                return {\r\n                    text: `该召唤技能等级 ${value.value}`\r\n                }\r\n            }\r\n\r\n            return null;\r\n        },\r\n    },\r\n\r\n    169: {\r\n        name: \"暴击时增加伤害\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                let v = value.value;\r\n                let split = v.split(\";\");\r\n                if (split.length >= 2) {\r\n                    let rate = Number(split[0]);\r\n                    let bonus = Number(split[1]);\r\n\r\n                    return {\r\n                        text: `造成致命一击命中时，${filters.percent(rate)}% 几率将产生 ${filters.percent((bonus < 0 ? -1 : 1) * bonus)}% ${bonus < 0 ? \"减少\" : \"额外\"}伤害  `,\r\n                        appendDuration: true,\r\n                    };\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    },\r\n\r\n    171: {\r\n        name: \"调整技能冷却\",\r\n        async describe(effect, value) {\r\n            if (value) {\r\n                let params = value.value;\r\n                let split = params.split(\"_\");\r\n                let split2 = split[0].split(\";\");\r\n                let type = Number(split2[0]);\r\n                let ratio = Number(split2[1]);\r\n\r\n                let freeSkills = split.length > 1 ? (split[1].split(\";\")\r\n                    .map((v) => Number(v))) :\r\n                    [];\r\n\r\n                let freeSkillNames = (await Promise.all(freeSkills\r\n                    .filter((v) => v > 0)\r\n                    .map(async (v) => await SkillProvider.getSkill(v))\r\n                    .map(async (v) => (await v).name.message)))\r\n                    .filter((v, i, s) => s.indexOf(v) == i);\r\n\r\n\r\n                return {\r\n                    text: `${type ? '被动': '主动'} 技能冷却 ${freeSkillNames.length ? ' 技能 ' + freeSkillNames.join(\", \") : ''} 减少 ${filters.percent(1 - ratio)}%`,\r\n                    appendDuration: true,\r\n                };\r\n\r\n            }\r\n\r\n            return null;\r\n        },\r\n    },\r\n\r\n    173: {\r\n        name: \"寒冰保护膜\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                let v = value.value;\r\n                if (v.startsWith(\"[\")) {\r\n                    let split = v.split(\"][\");\r\n                    let param1 = split[0].substring(1);\r\n                    split = param1.split(\";\");\r\n                    let scaling = Number(split[0]);\r\n                    return {\r\n                        text: `创建一个当前你魔法伤害的${filters.percent(scaling)}% HP保护膜 `,\r\n                        appendDuration: true,\r\n                    };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        },\r\n    },\r\n\r\n    179: {\r\n        name: \"击中动作\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                let v = value.value;\r\n                let split = v.split(\",\");\r\n                let list = split.join(\", then \");\r\n                return {\r\n                    text: `当命中目标时，动作改为 ${list}`,\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n\r\n    200: statIncrease(\"物理伤害\"),\r\n\r\n    202: statIncrease(\"魔法伤害\"),\r\n\r\n    211: {\r\n        name: \"清除状态效果\",\r\n        async describe(effect, value) {\r\n            if (value) {\r\n                let values = value.value.split(\";\");\r\n                let freeSkills = values\r\n                    .map((v) => Number(v));\r\n\r\n                let freeSkillNames = (await Promise.all(freeSkills\r\n                    .filter((v) => v > 0)\r\n                    .map(async (v) => await SkillProvider.getSkill(v))\r\n                    .map(async (v) => {\r\n                        const vv = await v;\r\n                        return vv.name.message + ` (${vv.id})`;\r\n                    })\r\n                    .filter((v, i, s) => s.indexOf(v) == i)));\r\n                \r\n                return {\r\n                    text: `清除已应用的效果 ${freeSkillNames.join(\", \")}`\r\n                };\r\n            }\r\n\r\n            return null;\r\n        },\r\n        async describeTsx(h, effect, value) {\r\n            if (value) {\r\n                const skillIds = value.value.split(';').map(Number);\r\n                \r\n                let skillNames = (await Promise.all(skillIds\r\n                    .filter((v) => v > 0 && !isNaN(v))\r\n                    .map(async (v) => await SkillProvider.getSkill(v))\r\n                    .map(async (v) => {\r\n                        const av = await v;\r\n                        return {\r\n                            desc: `${av.name.message} (${av.id})`,\r\n                            id: av.id,\r\n                        };\r\n                    })\r\n                    .map(async (v) => {\r\n                        const av = await v;\r\n                        const url = `/skills/${av.id}`;\r\n                        return (\r\n                            <li>\r\n                                <a href={url}>{av.desc}</a>\r\n                            </li>\r\n                        );\r\n                    })));\r\n            \r\n                return (\r\n                    <span>\r\n                        清除以下技能带来的效果：\r\n                        <ul class=\"inline-list\">{ skillNames }</ul>\r\n                    </span>\r\n                );\r\n            }\r\n            \r\n            return null;\r\n        },\r\n    },\r\n\r\n    215: {\r\n        name: \"命令召唤发动技能\",\r\n        async describe(effect, value) {\r\n            let skill = value && Number(value.value) || 0;\r\n            let skillName = '';\r\n            if (skill) {\r\n                skillName = (await SkillProvider.getSkill(skill)).name.message;\r\n            }\r\n\r\n            return {\r\n                text: `命令召唤发动技能 '${skillName}' (${skill})`,\r\n            }\r\n        },\r\n    },\r\n\r\n    218: {\r\n        name: \"捆绑\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                let v = value.value;\r\n                let split = v.split(\";\");\r\n\r\n                let rate = Number(split[0]);\r\n                let durability = Number(split[1]);\r\n                let action = split[2];\r\n                let canAD = split[3] == \"1\";\r\n\r\n                return {\r\n                    text: `${filters.percent(rate)}% 几率使用动作 ${action} 捆绑目标。 ${canAD ? \"目标可按A-D逃离\" : \"\"}`,\r\n                    appendDuration: true,\r\n                }\r\n            }\r\n\r\n            return null;\r\n        },\r\n    },\r\n\r\n    224: {\r\n        name: \"无法施展动作\",\r\n        describe: (effect, value) => ({\r\n            text: `不能施展动作 ${value && value.value.split(\";\").join(\", \")}`,\r\n            appendDuration: true,\r\n        }),\r\n    },\r\n\r\n    225: {\r\n        name: \"混乱\",\r\n        describe: (effect, value) => {\r\n            if (value) {\r\n                const mode = Number(value.value);\r\n                switch (mode) {\r\n                    case 2: {\r\n                        return {\r\n                            text: `键盘控制将会反向行动`,\r\n                            appendDuration: true,\r\n                        };\r\n                    }\r\n                    case 3: {\r\n                        return {\r\n                            text: `鼠标控制将会反向行动`,\r\n                            appendDuration: true,\r\n                        };\r\n                    }\r\n                    case 1: {\r\n                        return {\r\n                            text: `键盘和鼠标控制都会反向行动`,\r\n                            appendDuration: true,\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n            \r\n            return null;\r\n        },\r\n    },\r\n\r\n    232: {\r\n        name: \"变身\",\r\n        async describe(effect, value) {\r\n            if (value) {\r\n                let v = value.value;\r\n                let split = v.split(\";\");\r\n\r\n                let monsterId = Number(split[0]);\r\n                let initialAction = split[1];\r\n\r\n                // todo\r\n                let monsterName = `怪物ID ${monsterId}`;\r\n\r\n                return {\r\n                    text: `变身成为 ${monsterName}, 动作初始化为 \"${initialAction}\"`,\r\n                    appendDuration: true,\r\n                };\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n\r\n    233: {\r\n        name: \"杀戮\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                let v = value.value;\r\n                let flag = v == \"0\";\r\n\r\n                return {\r\n                    text: `必定杀死目标`,\r\n                    appendDuration: true,\r\n                };\r\n            }\r\n\r\n            return null;\r\n        },\r\n    },\r\n    234: statIncrease(\"暴击\"),\r\n\r\n    241: {\r\n        name: \"强光失明\",\r\n        describe: () => ({ text: \"强光失明\", appendDuration: true }),\r\n    },\r\n\r\n    251: statIncreasePercent(\"暴击率\"),\r\n\r\n    252: {\r\n        name: \"获得免疫力\",\r\n        async describe(effect, value) {\r\n            if (value) {\r\n                const split = value.value.split(\";\");\r\n                \r\n                const freeSkills = split\r\n                    .map((v) => Number(v))\r\n                    .filter((v) => !isNaN(v) && v > 1);\r\n\r\n                let freeSkillNames = (await Promise.all(freeSkills\r\n                    .filter((v) => v > 0)\r\n                    .map(async (v) => await SkillProvider.getSkill(v))\r\n                    .map(async (v) => {\r\n                        const vv = await v;\r\n                        return vv.name.message + ` (${vv.id})`;\r\n                    })\r\n                    .filter((v, i, s) => s.indexOf(v) == i)));\r\n                \r\n                return {\r\n                    text: `从以应用效果 ${freeSkillNames.join(\", \")} 处获得免疫力`,\r\n                    appendDuration: true,\r\n                };\r\n            }\r\n\r\n            return null;\r\n        },\r\n        async describeTsx(h, effect, value) {\r\n            if (value) {\r\n                const skillIds = value.value.split(';').map(Number);\r\n                \r\n                let skillNames = (await Promise.all(skillIds\r\n                    .filter((v) => v > 0 && !isNaN(v))\r\n                    .map(async (v) => await SkillProvider.getSkill(v))\r\n                    .map(async (v) => {\r\n                        const av = await v;\r\n                        return {\r\n                            desc: `${av.name.message} (${av.id})`,\r\n                            id: av.id,\r\n                        };\r\n                    })\r\n                    .map(async (v) => {\r\n                        const av = await v;\r\n                        const url = `/skills/${av.id}`;\r\n                        return (\r\n                            <li>\r\n                                <a href={url}>{av.desc}</a>\r\n                            </li>\r\n                        );\r\n                    })));\r\n            \r\n                return (\r\n                    <span>\r\n                        对下列技能获得免疫力：\r\n                        <ul class=\"inline-list\">{ skillNames }</ul>\r\n                    </span>\r\n                );\r\n            }\r\n            \r\n            return null;\r\n        },\r\n    },\r\n\r\n    254: {\r\n        name: \"显示目标的状态效果\",\r\n        async describe(effect, value) {\r\n            if (value) {\r\n                const split = value.value.split(\";\");\r\n                \r\n                const opt1 = split[0];\r\n                const opt2 = split[1];\r\n                const opt3 = split[2];\r\n                const stateEffectId = Number(split[3]);\r\n\r\n                // TODO await state effect\r\n                const stateEffectDesc = `State Effect ${stateEffectId}`;\r\n\r\n                return {\r\n                    text: `显示目标的状态效果 ${stateEffectDesc} ，选项 ${opt1},${opt2},${opt3}`,\r\n                    appendDuration: true,\r\n                };\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n\r\n    275: {\r\n        name: \"无法治愈\",\r\n        async describe(effect, value) {\r\n            if (value) {\r\n                const split = value.value.split(\";\");\r\n                const idCount = split.length;\r\n                if (idCount > 0) {\r\n                    const skillIds = split\r\n                        .map((v) => Number(v))\r\n                        .filter((v) => !isNaN(v) && v > 1);\r\n\r\n                    let allowedSkillNames = (await Promise.all(skillIds\r\n                        .filter((v) => v > 0)\r\n                        .map(async (v) => await SkillProvider.getSkill(v))\r\n                        .map(async (v) => {\r\n                            const vv = await v;\r\n                            return vv.name.message + ` (${vv.id})`;\r\n                        })\r\n                        .filter((v, i, s) => s.indexOf(v) == i)));\r\n\r\n                    const allowedSkillNamesList =  allowedSkillNames.join(\", \");\r\n\r\n                    return {\r\n                        text: `${ allowedSkillNamesList ? ', 除了 ' + allowedSkillNamesList : ''} 外，无法治愈`,\r\n                        appendDuration: true,\r\n                    };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        },\r\n        async describeTsx(h, effect, value) {\r\n            if (value) {\r\n                const skillIds = value.value.split(';').map(Number);\r\n                \r\n                let skillNames = (await Promise.all(skillIds\r\n                    .filter((v) => v > 0 && !isNaN(v))\r\n                    .map(async (v) => await SkillProvider.getSkill(v))\r\n                    .map(async (v) => {\r\n                        const av = await v;\r\n                        return {\r\n                            desc: `${av.name.message} (${av.id})`,\r\n                            id: av.id,\r\n                        };\r\n                    })\r\n                    .map(async (v) => {\r\n                        const av = await v;\r\n                        const url = `/skills/${av.id}`;\r\n                        return (\r\n                            <li>\r\n                                <a href={url}>{av.desc}</a>\r\n                            </li>\r\n                        );\r\n                    })));\r\n                \r\n                if (skillNames.length) {\r\n                    return (\r\n                        <span>\r\n                            除了这些\r\n                            <ul class=\"inline-list\">{ skillNames }</ul>\r\n                            技能外，都不能应用任何治愈效果技能\r\n                        </span>\r\n                    );\r\n                } else {\r\n                    return (<span>无法应用所有治愈效果技能</span>);\r\n                }\r\n            }\r\n            \r\n            return null;\r\n        },\r\n    },\r\n\r\n    278: {\r\n        name: \"逆惩罚伤害\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                let v = value.value;\r\n                let split = v.split(\";\");\r\n                let thresholdHpPercent = Number(split[0]);\r\n                let hpThresholdRatio = Number(split[1]);\r\n                let damageBoost = Number(split[2]);\r\n\r\n                return {\r\n                    text: `当命中的敌人高于 ${filters.percent(thresholdHpPercent)}% HP时, 每 ${filters.percent(hpThresholdRatio)}% HP 高于 ${filters.percent(thresholdHpPercent)}%，给予 ${filters.percent(damageBoost)}% 伤害 `,\r\n                };\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n\r\n    288: {\r\n        name: \"成功击中带状态的敌人\"\r\n    },\r\n\r\n    291: {\r\n        name: \"所有主动技能冷却重置\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                return {\r\n                    text: `重置所有主动技能冷却时间 ${value.value}秒`,\r\n                    appendDuration: true,\r\n                };\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n\r\n    296: {\r\n        name: \"向施展的技能追加状态效果\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                const [settings, effects, skills] = value.value.split(\"|\").\r\n                    flatMap((v) => v.split('][')).\r\n                    map((v) => v.replace(/\\]|\\[/g, ''));\r\n                \r\n                const [rate, duration] = settings.split(';').map(Number);\r\n                const [stateEffectId, stateEffectParameters] = effects.split('/');\r\n                const skillIds = skills.split(';');\r\n\r\n                return {\r\n                    text: `当使用 ${skillIds.join(', ')} 技能后，追加状态效果。在${filters.milliseconds(duration)}秒内，${rate}% 几率 状态效果ID${stateEffectId} 参数 ${stateEffectParameters} `,\r\n                    appendDuration: true,\r\n                };\r\n            }\r\n\r\n            return null;\r\n        },\r\n        async describeTsx(h, effect, value) {\r\n            if (value) {\r\n                const [settings, effects, skills] = value.value.split(\"|\").\r\n                    flatMap((v) => v.split('][')).\r\n                    map((v) => v.replace(/\\]|\\[/g, ''));\r\n                \r\n                const [rate, duration] = settings.split(';').map(Number);\r\n                const [stateEffectId, stateEffectParameters] = effects.split('/');\r\n                const skillIds = skills.split(';').map(Number);\r\n                \r\n                let skillNames = (await Promise.all(skillIds\r\n                    .filter((v) => v > 0 && !isNaN(v))\r\n                    .map(async (v) => await SkillProvider.getSkill(v))\r\n                    .map(async (v) => {\r\n                        const av = await v;\r\n                        return {\r\n                            desc: `${av.name.message} (${av.id})`,\r\n                            id: av.id,\r\n                        };\r\n                    })\r\n                    .map(async (v) => {\r\n                        const av = await v;\r\n                        const url = `/skills/${av.id}`;\r\n                        return (\r\n                            <li>\r\n                                <a href={url}>{av.desc}</a>\r\n                            </li>\r\n                        );\r\n                    })));\r\n                \r\n                let childEffect = await renderChild(h, Number(stateEffectId), stateEffectParameters, duration, effect);\r\n                \r\n                const info = `当使用技能后，追加状态效果。在 ${filters.milliseconds(duration)}秒内，${rate}% 几率 状态效果ID ${stateEffectId} 参数 ${stateEffectParameters} `;\r\n                \r\n                return (\r\n                    <span>\r\n                    { info }\r\n                    <ul class=\"inline-list\">{ skillNames }</ul>\r\n                    { childEffect }\r\n                    </span>\r\n                );\r\n            }\r\n            \r\n            return null;\r\n        },\r\n    },\r\n    \r\n    297: {\r\n        name: \"技能成功命中时追加效果\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                const [settings, effects, skills] = value.value.split(\"|\").\r\n                    flatMap((v) => v.split('][')).\r\n                    map((v) => v.replace(/\\]|\\[/g, ''));\r\n                \r\n                const [rate, duration] = settings.split(';').map(Number);\r\n                const [stateEffectId, stateEffectParameters] = effects.split('/');\r\n                const skillIds = skills.split(';');\r\n\r\n                return {\r\n                    text: `使用 ${skillIds.join(', ')} 成功击中时，${rate}% 几率在 ${filters.milliseconds(duration)}秒时间内追加效果。状态效果id ${stateEffectId} 参数 ${stateEffectParameters}`,\r\n                    appendDuration: true,\r\n                };\r\n            }\r\n\r\n            return null;\r\n        },\r\n        async describeTsx(h, effect, value) {\r\n            if (value) {\r\n                const [settings, effects, skills] = value.value.split(\"|\").\r\n                    flatMap((v) => v.split('][')).\r\n                    map((v) => v.replace(/\\]|\\[/g, ''));\r\n                \r\n                const [rate, duration] = settings.split(';').map(Number);\r\n                const [stateEffectId, stateEffectParameters] = effects.split('/');\r\n                const skillIds = skills.split(';').map(Number);\r\n                \r\n                let skillNames = (await Promise.all(skillIds\r\n                    .filter((v) => v > 0 && !isNaN(v))\r\n                    .map(async (v) => await SkillProvider.getSkill(v))\r\n                    .map(async (v) => {\r\n                        const av = await v;\r\n                        return {\r\n                            desc: `${av.name.message} (${av.id})`,\r\n                            id: av.id,\r\n                        };\r\n                    })\r\n                    .map(async (v) => {\r\n                        const av = await v;\r\n                        const url = `/skills/${av.id}`;\r\n                        return (\r\n                            <li>\r\n                                <a href={url}>{av.desc}</a>\r\n                            </li>\r\n                        );\r\n                    })));\r\n                \r\n                let childEffect = await renderChild(h, Number(stateEffectId), stateEffectParameters, duration, effect);\r\n                \r\n                const info = `成功击中时，${rate}% 几率在 ${filters.milliseconds(duration)}秒时间内 追加状态效果。状态id ${stateEffectId} 参数 ${stateEffectParameters}  `;\r\n                \r\n                return (\r\n                    <span>\r\n                    { info }\r\n                    <ul class=\"inline-list\">{ skillNames }</ul>\r\n                    { childEffect }\r\n                    </span>\r\n                );\r\n            }\r\n            \r\n            return null;\r\n        },\r\n    },\r\n\r\n    301: {\r\n        name: \"DPS 条\",\r\n        async describe(effect, value) {\r\n            if (value) {\r\n                let params = value.value;\r\n                let split = params.split(\";\");\r\n                \r\n                let type = Number(split[0]);\r\n                let durability = Number(split[1]);\r\n                let skillIdIfBroken = Number(split[2]);\r\n                let unkA = split[3];\r\n                let unkB = split[4];\r\n                let unkC = split[5];\r\n\r\n                let skill = await SkillProvider.getSkill(skillIdIfBroken);\r\n\r\n                let duration = value.duration == 0 ? \"\" : `  ${filters.milliseconds(value.duration)}秒`;\r\n\r\n                let typeStr = `类别 ${type}`;\r\n                switch (type) {\r\n                    case 1: typeStr = \"蓝\"; break;\r\n                    case 3: typeStr = \"红\"; break;\r\n                }\r\n\r\n                return {\r\n                    text: `在${filters.thousands(durability)}${duration} 时间内显示 ${typeStr} DPS条. 使用 ${skill.name.message} 可解除. ${unkA},${unkB},${unkC}`,\r\n                    appendDuration: false,\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n\r\n    306: statIncreasePercent(\"属性抵抗力\"),\r\n    307: statIncreasePercent(\"属性攻击力\"),\r\n    \r\n    309: {\r\n        name: '攻击成功后增加攻击力'\r\n    },\r\n    310: statIncreasePercent(\"攻击力\"),\r\n\r\n    315: {\r\n        name: \"一定时间内以攻击力治愈\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                const split = value.value.split(\";\").map(Number);\r\n                const [unk1, scaling, unk2, unk3, interval, duration] = split;\r\n\r\n                return {\r\n                    text: `在 ${filters.milliseconds(duration)}秒内，每 ${filters.milliseconds(interval)} 秒恢复最大攻击力的 ${filters.percent(scaling)}% HP `,\r\n                    appendDuration: false,\r\n                };\r\n            }\r\n\r\n            return null;\r\n        },\r\n    },\r\n    316: {\r\n        name: '标记召唤目标',\r\n    },\r\n    317: {\r\n        name: '强制召唤物攻击被标记的目标'\r\n    },\r\n    \r\n    322: {\r\n        name: '成功命中时追加效果',\r\n        describe(effect, value) {\r\n            if (value) {\r\n                const split = value.value.split(\";\");\r\n                const skillId = Number(split[0]);\r\n                const cooldown = Number(split[1]);\r\n                const rate = Number(split[2]);\r\n\r\n                return {\r\n                    text: `施展 ${skillId} 并成功命中时， ${rate}% 几率追加效果，冷却 ${cooldown}`,\r\n                };\r\n            }\r\n\r\n            return null;\r\n        },\r\n        async describeTsx(h, effect, value) {\r\n            if (value) {\r\n                const [skillId, cooldown, rate] = value.value.split(\";\").map(Number);\r\n                const skill = await SkillProvider.getSkill(skillId);\r\n                const skillLink = (<a href={`/skills/${skill.id}`} target={'_blank'}>{skill.name.message} ({skill.id})</a>);\r\n                                \r\n                return (\r\n                    <span>\r\n                        成功命中后， {rate}% 几率应用该 {skillLink} 技能效果，冷却时间为 {filters.milliseconds(cooldown)}s\r\n                    </span>\r\n                );\r\n            }\r\n            \r\n            return null;\r\n        },\r\n    },\r\n    323: {\r\n        name: '受到攻击时发动技能',\r\n        describe(effect, value) {\r\n            if (value) {\r\n                const split = value.value.split(\";\");\r\n                const skillId = Number(split[0]);\r\n                const cooldown = Number(split[1]);\r\n                const rate = Number(split[2]);\r\n\r\n                return {\r\n                    text: `受到攻击时，${rate}% 几率发动技能 ${skillId},冷却时间为 ${cooldown}s`,\r\n                };\r\n            }\r\n\r\n            return null;\r\n        },\r\n        async describeTsx(h, effect, value) {\r\n            if (value) {\r\n                const [skillId, cooldown, rate] = value.value.split(\";\").map(Number);\r\n                const skill = await SkillProvider.getSkill(skillId);\r\n                const skillLink = (<a href={`/skills/${skill.id}`} target={'_blank'}>{skill.name.message} ({skill.id})</a>);\r\n                                \r\n                return (\r\n                    <span>\r\n                        受到攻击时，{rate}% 几率发动技能 {skillLink} ，冷却时间为 {filters.milliseconds(cooldown)}s\r\n                    </span>\r\n                );\r\n            }\r\n            \r\n            return null;\r\n        },\r\n    },\r\n    \r\n    325: {\r\n        name: \"出血\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                const split = value.value.split(\";\");\r\n                const rate = Number(split[0]);\r\n                const coeff = Number(split[1]);\r\n\r\n                return {\r\n                    text: `${filters.percent(rate)}% 几率使目标遭受攻击力的  ${filters.percent(coeff)}% 流血伤害`,\r\n                    appendDuration: true,\r\n                };\r\n            }\r\n\r\n            return null;\r\n        },\r\n    },\r\n\r\n    331: {\r\n        name: '使用技能消灭敌人时',\r\n        async describeTsx(h, effect, value) {\r\n            if (value) {\r\n                const [skillId, cooldown, rate] = value.value.split(\";\").map(Number);\r\n                const skill = await SkillProvider.getSkill(skillId);\r\n                const skillLink = (<a href={`/skills/${skill.id}`} target={'_blank'}>{skill.name.message} ({skill.id})</a>);\r\n                                \r\n                return (\r\n                    <span>\r\n                        当你杀死敌人时，{rate}% 几率发动技能 {skillLink} ，冷却时间为 {filters.milliseconds(cooldown)}s\r\n                    </span>\r\n                );\r\n            }\r\n            \r\n            return null;\r\n        },\r\n    },\r\n\r\n    332: {\r\n        name: '超级盔甲损坏时发动',\r\n        async describeTsx(h, effect, value) {\r\n            if (value) {\r\n                const [skillId, cooldown, rate] = value.value.split(\";\").map(Number);\r\n                const skill = await SkillProvider.getSkill(skillId);\r\n                const skillLink = (<a href={`/skills/${skill.id}`} target={'_blank'}>{skill.name.message} ({skill.id})</a>);\r\n                                \r\n                return (\r\n                    <span>\r\n                        当超级盔甲损坏时，{rate}% 几率发动该 {skillLink} 技能，冷却时间为 {filters.milliseconds(cooldown)}s\r\n                    </span>\r\n                );\r\n            }\r\n            \r\n            return null;\r\n        },\r\n    },\r\n\r\n    333: {\r\n        name: '当超级盔甲损坏时发动技能',\r\n        async describeTsx(h, effect, value) {\r\n            if (value) {\r\n                const [skillId, cooldown, rate] = value.value.split(\";\").map(Number);\r\n                if(skillId != 0){\r\n                    const skill = await SkillProvider.getSkill(skillId);\r\n                    const skillLink = (<a href={`/skills/${skill.id}`} target={'_blank'}>{skill.name.message} ({skill.id})</a>);\r\n                                    \r\n                    return (\r\n                        <span>\r\n                            当超级盔甲损坏时，{rate}% 几率发动技能 {skillLink}，冷却时间为{filters.milliseconds(cooldown)}s\r\n                        </span>\r\n                    );\r\n                }\r\n            }\r\n            \r\n            return null;\r\n        },\r\n    },\r\n    \r\n    345: {\r\n        name: \"强化技能\",\r\n        async describe(effect, value) {\r\n            if (value) {\r\n                let params = value.value;\r\n                let split = params.split(\";\");\r\n\r\n                let freeSkills = split.map((v) => Number(v));\r\n\r\n                let freeSkillNames = (await Promise.all(freeSkills\r\n                    .filter((v) => v > 0)\r\n                    .map(async (v) => await SkillProvider.getSkill(v))\r\n                    .map(async (v) => {\r\n                        const av = await v;\r\n                        return `${av.name.message} (${av.id})`;\r\n                    })))\r\n                    .filter((v, i, s) => s.indexOf(v) == i);\r\n\r\n                let pairs: string[] = freeSkillNames\r\n                    .map((v, i, a) => {\r\n                        if (i % 2 == 1) {\r\n                            return `${a[i - 1]} -> ${v}`\r\n                        }\r\n\r\n                        return null;\r\n                    })\r\n                    .filter((v) => v != null) as string[];\r\n\r\n                return {\r\n                    text: `技能被强化: ${pairs.join(\", \")}`,\r\n                    appendDuration: true,\r\n                };\r\n            }\r\n\r\n            return null;\r\n        },\r\n        async describeTsx(h, effect, value) {\r\n            if (value) {\r\n                let params = value.value;\r\n                let split = params.split(\";\");\r\n\r\n                let freeSkills = split.map((v) => Number(v));\r\n                let skillNames = (await Promise.all(freeSkills\r\n                    .filter((v) => v > 0 && !isNaN(v))\r\n                    .map(async (v) => await SkillProvider.getSkill(v))\r\n                    .map(async (v) => {\r\n                        const av = await v;\r\n                        return {\r\n                            desc: `${av.name.message} (${av.id})`,\r\n                            id: av.id,\r\n                        };\r\n                    })\r\n                    .map(async (v) => {\r\n                        const av = await v;\r\n                        const url = `/skills/${av.id}`;\r\n                        return (\r\n                            <a href={url}>{av.desc}</a>\r\n                        );\r\n                    })));\r\n\r\n                let pairs = skillNames\r\n                    .map((v, i, a) => {\r\n                        if (i % 2 == 1) {\r\n                            return (\r\n                                <tr>\r\n                                    <th>{a[i - 1]}</th>\r\n                                    <td>{v}</td>\r\n                                </tr>\r\n                            );\r\n                        }\r\n\r\n                        return null;\r\n                    })\r\n                    .filter((v) => v != null);\r\n\r\n                return (\r\n                    <div>\r\n                        <div>强化下列技能</div>\r\n                        <table>\r\n                            <thead>\r\n                                <th>原始的技能</th>\r\n                                <th>强化后技能</th>\r\n                            </thead>\r\n                            <tbody>\r\n                                { pairs }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                );\r\n                    \r\n                // return {\r\n                //     text: `Skills are enhanced: ${pairs.join(\", \")}`,\r\n                //     appendDuration: true,\r\n                // };\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n\r\n    349: {\r\n        name: \"被动 泡泡生成\",\r\n        async describe(effect, value) {\r\n            if (value) {\r\n                let params = value.value;\r\n                let split = params.split(\";\");\r\n\r\n                let interval = Number(split[0]);\r\n                let bubbleId = Number(split[1]);\r\n\r\n                // todo load bubble info\r\n                let bubbleName = `泡泡ID ${bubbleId}`;\r\n                \r\n                try {\r\n                    const bubble = await TableProvider.getTableRow<ITableRow & {_BubbleNameID_txt?: string}>('skillbubbledefine', bubbleId, undefined, {\r\n                        uiresolve: ['_BubbleNameID']\r\n                    });\r\n                    if (bubble._BubbleNameID_txt) {\r\n                        bubbleName = `${bubble._BubbleNameID_txt} (${bubbleId})`;\r\n                    }\r\n                } catch (e) {\r\n                }\r\n\r\n                return {\r\n                    text: `每 ${filters.milliseconds(interval)} 秒, 获得 1个 ${bubbleName}`,\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    },\r\n    350: {\r\n        name: \"被动 泡泡消耗\",\r\n        async describe(effect, value) {\r\n            if (value) {\r\n                let params = value.value;\r\n                let split = params.split(\";\");\r\n\r\n                let interval = Number(split[0]);\r\n                let bubbleId = Number(split[1]);\r\n\r\n                // todo load bubble info\r\n                let bubbleName = `泡泡 ${bubbleId}`;\r\n                \r\n                try {\r\n                    const bubble = await TableProvider.getTableRow<ITableRow & {_BubbleNameID_txt?: string}>('skillbubbledefine', bubbleId, undefined, {\r\n                        uiresolve: ['_BubbleNameID']\r\n                    });\r\n                    if (bubble._BubbleNameID_txt) {\r\n                        bubbleName = `${bubble._BubbleNameID_txt} (${bubbleId})`;\r\n                    }\r\n                } catch (e) {\r\n                }\r\n\r\n                return {\r\n                    text: `每 ${filters.milliseconds(interval)} 秒, 消耗 1个 ${bubbleName}`,\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    },\r\n\r\n    356: {\r\n        name: \"技能命中时冷却减少\",\r\n        async describe(effect, value) {\r\n            if (value) {\r\n                let params = value.value;\r\n                let split = params.split(\";\");\r\n                let recoveredSkills = split[0].split(\",\").map((v) => Number(v));\r\n                let recoverySkills = split[1].split(\",\").map((v) => Number(v));\r\n                let recoveryAmount = Number(split[2]);\r\n\r\n                let recoveredSkillNames = (await Promise.all(recoveredSkills\r\n                    .map(async (v) => await SkillProvider.getSkill(v))\r\n                    .map(async (v) => (await v).name.message)));\r\n                \r\n                let recoverySkillNames = (await Promise.all(recoverySkills\r\n                    .map(async (v) => await SkillProvider.getSkill(v))\r\n                    .map(async (v) => (await v).name.message)));\r\n\r\n                return {\r\n                    text: `当 ${recoverySkillNames.join(\"/\")} 命中${recoverySkillNames.length == 1 ? \"\" : \"\"} 时 ，${recoveredSkillNames.join(\"/\")} 冷却时间减少 ${recoveredSkillNames.length == 1 ? \"\" : \"\"}  ${filters.milliseconds(recoveryAmount)}秒 `,\r\n                };\r\n            }\r\n\r\n            return null;\r\n        },\r\n        async describeTsx(h, effect, value) {\r\n            if (value) {\r\n                let params = value.value;\r\n                let split = params.split(\";\");\r\n                let recoveredSkills = split[0].split(\",\").map((v) => Number(v));\r\n                let recoverySkills = split[1].split(\",\").map((v) => Number(v));\r\n                let recoveryAmount = Number(split[2]);\r\n    \r\n                let recoveredSkillNames = (await Promise.all(recoveredSkills\r\n                    .filter((v) => v > 0 && !isNaN(v))\r\n                    .map(async (v) => await SkillProvider.getSkill(v))\r\n                    .map(async (v) => {\r\n                        const av = await v;\r\n                        return {\r\n                            desc: `${av.name.message} (${av.id})`,\r\n                            id: av.id,\r\n                        };\r\n                    })\r\n                    .map(async (v) => {\r\n                        const av = await v;\r\n                        const url = `/skills/${av.id}`;\r\n                        return (\r\n                            <li><a href={url} target={'_blank'}>{av.desc}</a></li>\r\n                        );\r\n                    })));\r\n                let recoverySkillNames = (await Promise.all(recoverySkills\r\n                    .filter((v) => v > 0 && !isNaN(v))\r\n                    .map(async (v) => await SkillProvider.getSkill(v))\r\n                    .map(async (v) => {\r\n                        const av = await v;\r\n                        return {\r\n                            desc: `${av.name.message} (${av.id})`,\r\n                            id: av.id,\r\n                        };\r\n                    })\r\n                    .map(async (v) => {\r\n                        const av = await v;\r\n                        const url = `/skills/${av.id}`;\r\n                        return (\r\n                            <li><a href={url} target={'_blank'}>{av.desc}</a></li>\r\n                        );\r\n                    })));\r\n\r\n\r\n                return (\r\n                    <span>\r\n                        当技能\r\n                        <ul class=\"inline-list\">\r\n                            { recoverySkillNames }\r\n                        </ul>\r\n                        命中时，\r\n                        回复这些技能 \r\n                        <ul class=\"inline-list\">\r\n                            { recoveredSkillNames }\r\n                        </ul>\r\n                        {filters.milliseconds(recoveryAmount)}s 冷却时间\r\n                    </span>\r\n                );\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n\r\n    370: {\r\n        name: \"当泡泡数减少到某值时移除Buff\",\r\n        async describe(effect, value) {\r\n            if (value) {\r\n                const split = value.value.split(\";\");\r\n                const bubbleId = Number(split[0]);\r\n                const count = Number(split[1]);\r\n                const skillId = Number(split[2]);\r\n\r\n                // todo load bubble info\r\n                let bubbleName = `Bubble ${bubbleId}`;\r\n                \r\n                try {\r\n                    const bubble = await TableProvider.getTableRow<ITableRow & {_BubbleNameID_txt?: string}>('skillbubbledefine', bubbleId, undefined, {\r\n                        uiresolve: ['_BubbleNameID']\r\n                    });\r\n                    if (bubble._BubbleNameID_txt) {\r\n                        bubbleName = `${bubble._BubbleNameID_txt} (${bubbleId})`;\r\n                    }\r\n                } catch (e) {\r\n                }\r\n                \r\n                let skill = await SkillProvider.getSkill(skillId);\r\n\r\n                return {\r\n                    text: `当泡泡${bubbleName} 减少到${count}时，移除由技能 ${skill.name.message} 带来的增益 `,\r\n                    appendDuration: true,\r\n                };\r\n            }\r\n\r\n            return null;\r\n        },\r\n        async describeTsx(h, effect, value) {\r\n            if (value) {\r\n                const [bubbleId, count, skillId] = value.value.split(\";\").map(Number);\r\n                const skill = await SkillProvider.getSkill(skillId);\r\n                const skillLink = (<a href={`/skills/${skill.id}`} target={'_blank'}>{skill.name.message} ({skill.id})</a>);\r\n                \r\n                let bubbleName = `Bubble ${bubbleId}`;\r\n                \r\n                try {\r\n                    const bubble = await TableProvider.getTableRow<ITableRow & {_BubbleNameID_txt?: string}>('skillbubbledefine', bubbleId, undefined, {\r\n                        uiresolve: ['_BubbleNameID']\r\n                    });\r\n                    if (bubble._BubbleNameID_txt) {\r\n                        bubbleName = `${bubble._BubbleNameID_txt} (${bubbleId})`;\r\n                    }\r\n                } catch (e) {\r\n                }\r\n                \r\n                return (\r\n                    <span>\r\n                        当 {bubbleName}数量减少到{count}时，移除由这些 {skillLink} 技能的所有应用效果\r\n                    </span>\r\n                );\r\n            }\r\n            \r\n            return null;\r\n        },\r\n    },\r\n\r\n    372: {\r\n        name: \"以百分比提升其他属性\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                let params = value.value;\r\n                let split = params.split(\";\");\r\n                let sourceStat = Number(split[0]);\r\n                let rate = Number(split[1]);\r\n                let destStat = Number(split[2]);\r\n\r\n                function statToName(id: number): string {\r\n                    switch (id) {\r\n                        case 0: return \"力量\";\r\n                        case 2: return \"智力\";\r\n                        case 5: return \"物理攻击力\";\r\n                        case 6: return \"魔法攻击力\";\r\n                        case 7: return \"物理防御力\";\r\n                    }\r\n\r\n                    return `属性 ${id}`;\r\n                };\r\n\r\n                // todo\r\n                let sourceStatName = statToName(sourceStat);\r\n                let destStatName = statToName(destStat);\r\n\r\n                return {\r\n                    text: `将 ${filters.percent(rate)}%  ${sourceStatName} 转换 ${destStatName}`,\r\n                    appendDuration: true,\r\n                };\r\n            }\r\n\r\n            return null;\r\n        },\r\n    },\r\n\r\n    389: statIncreasePercent(\"最终伤害\"),\r\n\r\n    390: {\r\n        name: \"应用最高属性\",\r\n        describe(effect, value) {\r\n            if (value) {\r\n                return {\r\n                    text: `以属性 [${value.value.split(\";\").join(\", \")}] 最高值为应用`,\r\n                    appendDuration: true,\r\n                };\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n\r\n    392: {\r\n        name: \"动作速度减慢\",\r\n        describe: (effect, value) => ({ text: \"你的动作将会变慢\", appendDuration: true }),\r\n    },\r\n\r\n    404: statIncreasePercent(\"暴击伤害\"),\r\n};\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"card-list\",attrs:{\"long\":_vm.isLong}},[_vm._t(\"default\"),(_vm.count === 0)?_vm._t(\"empty\",[_vm._m(0)]):_vm._e()],2)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"empty\"},[_c('span',{staticClass:\"desc\"},[_vm._v(\"列表里无任何物品\")])])}]\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\r\nimport Vue from 'vue'\r\nexport default Vue.extend({\r\n    props: {\r\n        \"count\": {\r\n            type: Number as () => number,\r\n        },\r\n    },\r\n    computed: {\r\n        isLong(): boolean {\r\n            return this.count > 6;\r\n        },\r\n    },\r\n});\r\n","import mod from \"-!../../../node_modules/@vue/cli-plugin-typescript/node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ResponsiveCardList.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/@vue/cli-plugin-typescript/node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ResponsiveCardList.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./ResponsiveCardList.vue?vue&type=template&id=a4b37af2&scoped=true&\"\nimport script from \"./ResponsiveCardList.vue?vue&type=script&lang=ts&\"\nexport * from \"./ResponsiveCardList.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./ResponsiveCardList.vue?vue&type=style&index=0&id=a4b37af2&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"a4b37af2\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar flattenIntoArray = require('../internals/flatten-into-array');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar aFunction = require('../internals/a-function');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\n// `Array.prototype.flatMap` method\n// https://github.com/tc39/proposal-flatMap\n$({ target: 'Array', proto: true }, {\n  flatMap: function flatMap(callbackfn /* , thisArg */) {\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A;\n    aFunction(callbackfn);\n    A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    return A;\n  }\n});\n","import ITableRow from '@/models/table/ITableRow';\r\nimport ITypedMap from '@/models/util/ITypedMap';\r\nimport { ApiHttpClient } from \"@/globals\";\r\nimport store from '@/store';\r\nimport { IDntSchema } from '@/models/dnt/schema/IDntSchema';\r\n\r\nexport type ColumnOp = '='|'=='|'eq'|'equal'|'equals'|'!='|'neq'|'notequal'\r\n    |'<'|'lt'|'less'|'<='|'le'|'leq'|'atmost'|'>'|'gt'|'greater'|'>='|'geq'\r\n    |'atleast'|'<=>'|'minmax'|'closed'|'<>'|'open'|'between'|'=ic'|'==ic'\r\n    |'eqic'|'equalic'|'equalsic'|'!=ic'|'neqic'|'notequalic'|'in'|'contains'\r\n    |'~'|'nin'|'notcontains'|'ninic'|'notcontainsic'|'!~ic';\r\n\r\nexport interface IOptions {\r\n    uiresolve?: string[];\r\n    fileresolve?: string[];\r\n    select?: string[];\r\n    limit?: number;\r\n}\r\n\r\nexport interface ITableProvider {\r\n    getTableSchema(tableName: string, region?: string): Promise<IDntSchema>;\r\n\r\n    getTableRow<T extends ITableRow>(tableName: string, rowId: number, region?: string, opt?: IOptions): Promise<T>;\r\n\r\n    getTableRows<T extends ITableRow>(tableName: string, rowIds: number[], region?: string, opt?: IOptions): Promise<ITypedMap<T>>;\r\n\r\n    getTableRowIdsMatching(tableName: string, columnName: string, op: ColumnOp, value: string|number, region?: string): Promise<number[]>;\r\n\r\n    getTableRowsMatching<T extends ITableRow>(tableName: string, columnName: string, op: ColumnOp, value: string|number, region?: string, opt?: IOptions): Promise<T[]>;\r\n    \r\n    getTable<T extends ITableRow>(tableName: string, region?: string): Promise<T[]>;\r\n}\r\n\r\nclass TableProvider implements ITableProvider {\r\n    constructor() {\r\n    }\r\n\r\n    public async getTableSchema(tableName: string, region?: string): Promise<IDntSchema> {\r\n        region = this._ensureRegion(region);\r\n\r\n        const resp = await ApiHttpClient.get<IDntSchema>(`/server/${region}/tables/${tableName}`);\r\n        return resp.data;\r\n    }\r\n\r\n    public async getTableRow<T extends ITableRow>(tableName: string, rowId: number, region?: string, opt?: IOptions): Promise<T> {\r\n        region = this._ensureRegion(region);\r\n\r\n        const resp = await ApiHttpClient.get<T>(`table.php?lan=${region}&id=${rowId}&table=${tableName}`, {\r\n            // params: {\r\n            //     uiresolve: (opt && opt.uiresolve) ? opt.uiresolve.join(',') : undefined,\r\n            //     fileresolve: (opt && opt.fileresolve) ? opt.fileresolve.join(',') : undefined,\r\n            //     select: (opt && opt.select) ? opt.select.join(',') : undefined,\r\n            // }\r\n        });\r\n\r\n        return resp.data;\r\n    }\r\n\r\n    public async getTableRows<T extends ITableRow>(tableName: string, rowIds: number[], region?: string, opt?: IOptions): Promise<ITypedMap<T>> {\r\n        region = this._ensureRegion(region);\r\n\r\n        const resp = await ApiHttpClient.get<ITypedMap<T>>(`/server/${region}/tables/${tableName}/${rowIds.join(',')}`, {\r\n            params: {\r\n                uiresolve: (opt && opt.uiresolve) ? opt.uiresolve.join(',') : undefined,\r\n                fileresolve: (opt && opt.fileresolve) ? opt.fileresolve.join(',') : undefined,\r\n                select: (opt && opt.select) ? opt.select.join(',') : undefined,\r\n                limit: (opt && opt.limit) ? opt.limit : undefined,\r\n            }\r\n        });\r\n\r\n        return resp.data;\r\n    }\r\n\r\n    public async getTableRowIdsMatching(tableName: string, columnName: string, op: ColumnOp, value: string|number, region?: string): Promise<number[]> {\r\n        region = this._ensureRegion(region);\r\n\r\n        const resp = await ApiHttpClient.get<number[]>(`/server/${region}/tables/${tableName}/columns/${columnName}/${op}/${value}`);\r\n\r\n        return resp.data;\r\n    }\r\n\r\n    public async getTableRowsMatching<T extends ITableRow>(tableName: string, columnName: string, op: ColumnOp, value: string|number, region?: string, opt?: IOptions): Promise<T[]> {\r\n        region = this._ensureRegion(region);\r\n\r\n        const resp = await ApiHttpClient.get<T[]>(`/table.php?lan=${region}&id=${value}&table=${tableName}`, {\r\n            params: {\r\n                uiresolve: (opt && opt.uiresolve) ? opt.uiresolve.join(',') : undefined,\r\n                fileresolve: (opt && opt.fileresolve) ? opt.fileresolve.join(',') : undefined,\r\n                select: (opt && opt.select) ? opt.select.join(',') : undefined,\r\n                limit: (opt && opt.limit) ? opt.limit : undefined,\r\n            }\r\n        });\r\n\r\n        return resp.data;\r\n    }\r\n    \r\n    public async getTable<T extends ITableRow>(tableName: string, region?: string, limit: number = 9000): Promise<T[]> {\r\n        region = this._ensureRegion(region);\r\n\r\n        const resp = await ApiHttpClient.get<T[]>(`/server/${region}/tables/${tableName}`, {\r\n            params: {\r\n                limit,\r\n            }\r\n        });\r\n\r\n        return resp.data;\r\n    }\r\n\r\n    private _ensureRegion(region?: string): string {\r\n        if (!region) {\r\n            return store.state.regionCode;\r\n        }\r\n\r\n        return region;\r\n    }\r\n}\r\n\r\nexport default new TableProvider();\r\n","// this method was added to unscopables after implementation\n// in popular engines, so it's moved to a separate module\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\naddToUnscopables('flatMap');\n","'use strict';\nvar isArray = require('../internals/is-array');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/function-bind-context');\n\n// `FlattenIntoArray` abstract operation\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar flattenIntoArray = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? bind(mapper, thisArg, 3) : false;\n  var element;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      if (depth > 0 && isArray(element)) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError('Exceed the acceptable array length');\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n};\n\nmodule.exports = flattenIntoArray;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"card-list-entry\",attrs:{\"narrow\":_vm.narrow}},[_vm._t(\"default\")],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\r\nimport Vue from 'vue';\r\nexport default Vue.extend({\r\n    props: {\r\n        \"narrow\": {\r\n            type: Boolean as () => boolean,\r\n        },\r\n    },\r\n});\r\n","import mod from \"-!../../../node_modules/@vue/cli-plugin-typescript/node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ResponsiveCardListEntry.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/@vue/cli-plugin-typescript/node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ResponsiveCardListEntry.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./ResponsiveCardListEntry.vue?vue&type=template&id=83cab26c&scoped=true&\"\nimport script from \"./ResponsiveCardListEntry.vue?vue&type=script&lang=ts&\"\nexport * from \"./ResponsiveCardListEntry.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./ResponsiveCardListEntry.vue?vue&type=style&index=0&id=83cab26c&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"83cab26c\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ResponsiveCardList.vue?vue&type=style&index=0&id=a4b37af2&lang=less&scoped=true&\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ResponsiveCardListEntry.vue?vue&type=style&index=0&id=83cab26c&lang=less&scoped=true&\""],"sourceRoot":""}